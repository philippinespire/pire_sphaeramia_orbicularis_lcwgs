Looking to launch executable "/opt/conda/bin/bwa-meme_mode2.avx512bw", simd = _mode2.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Sor.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Sor.fasta
* Index prefix: reference.genbank.Sor.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Sor.fasta.0123
* Reference genome size: 2685325284 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:2 SEARCH_METHOD: 1 MEM_TRADEOFF:0 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 19.166 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 32.391 sec
[M::memoryAllocLearned::MEME] Generating SA and 64-bit Suffix in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 20.235 sec
3. Memory pre-allocation for BWT: 35552.6194 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000282, nseq: 3298944
	[0000][ M::kt_pipeline] read 3298944 sequences (400000282 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000077, nseq: 3291014
	[0000][ M::kt_pipeline] read 3291014 sequences (400000077 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3298944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 1117733, 36, 102)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (60, 99, 178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 414)
[0000][PE] mean and std.dev: (107.80, 66.45)
[0000][PE] low and high boundaries for proper pairs: (1, 532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.06, 75.50)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (109, 288, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5584)
[0000][PE] mean and std.dev: (743.29, 964.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7409)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (67, 105, 157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (107.27, 62.21)
[0000][PE] low and high boundaries for proper pairs: (1, 427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3298944 reads in 617.728 CPU sec, 16.271 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3291014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (110, 1103653, 40, 99)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (46, 87, 147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 349)
[0000][PE] mean and std.dev: (102.98, 75.98)
[0000][PE] low and high boundaries for proper pairs: (1, 450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.49, 75.49)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (78, 190, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1125)
[0000][PE] mean and std.dev: (252.11, 216.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1474)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (62, 91, 150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 326)
[0000][PE] mean and std.dev: (111.29, 69.21)
[0000][PE] low and high boundaries for proper pairs: (1, 414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3291014 reads in 631.232 CPU sec, 17.176 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000150, nseq: 3312252
	[0000][ M::kt_pipeline] read 3312252 sequences (400000150 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3312252
[0000] read_chunk: 400000000, work_chunk_size: 400000062, nseq: 3305918
	[0000][ M::kt_pipeline] read 3305918 sequences (400000062 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (97, 1157920, 30, 105)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (50, 94, 170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 410)
[0000][PE] mean and std.dev: (109.49, 87.31)
[0000][PE] low and high boundaries for proper pairs: (1, 530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.12, 75.52)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (64, 331, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1858)
[0000][PE] mean and std.dev: (406.79, 352.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2456)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (58, 84, 167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 385)
[0000][PE] mean and std.dev: (103.42, 68.43)
[0000][PE] low and high boundaries for proper pairs: (1, 494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3312252 reads in 553.488 CPU sec, 15.188 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 1162000, 31, 93)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (51, 92, 183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 447)
[0000][PE] mean and std.dev: (110.13, 86.14)
[0000][PE] low and high boundaries for proper pairs: (1, 579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.50, 75.43)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (128, 282, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2165)
[0000][PE] mean and std.dev: (469.83, 458.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (63, 90, 169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 381)
[0000][PE] mean and std.dev: (109.20, 74.64)
[0000][PE] low and high boundaries for proper pairs: (1, 487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3305918 reads in 553.204 CPU sec, 15.144 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000171, nseq: 3315748
	[0000][ M::kt_pipeline] read 3315748 sequences (400000171 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000046, nseq: 3308504
	[0000][ M::kt_pipeline] read 3308504 sequences (400000046 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3315748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 1182224, 35, 104)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (55, 88, 134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 292)
[0000][PE] mean and std.dev: (90.94, 58.33)
[0000][PE] low and high boundaries for proper pairs: (1, 371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.84, 75.70)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (130, 510, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (591.38, 643.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4798)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (73, 120, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 385)
[0000][PE] mean and std.dev: (118.60, 70.72)
[0000][PE] low and high boundaries for proper pairs: (1, 489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3315748 reads in 555.714 CPU sec, 14.762 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3308504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 1172124, 28, 110)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (52, 92, 146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 334)
[0000][PE] mean and std.dev: (99.62, 67.86)
[0000][PE] low and high boundaries for proper pairs: (1, 428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.20, 75.68)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (57, 424, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (399.12, 411.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3229)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (57, 107, 170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (118.19, 81.88)
[0000][PE] low and high boundaries for proper pairs: (1, 509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3308504 reads in 553.998 CPU sec, 15.205 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000001, nseq: 3311102
	[0000][ M::kt_pipeline] read 3311102 sequences (400000001 bp)...
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3311102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 1167812, 38, 99)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (60, 105, 187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 441)
[0000][PE] mean and std.dev: (119.17, 83.35)
[0000][PE] low and high boundaries for proper pairs: (1, 568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.05, 75.58)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (55, 160, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1009)
[0000][PE] mean and std.dev: (205.37, 209.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1327)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (49, 100, 150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 352)
[0000][PE] mean and std.dev: (107.69, 77.55)
[0000][PE] low and high boundaries for proper pairs: (1, 453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3311102 reads in 550.930 CPU sec, 15.024 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000083, nseq: 3308576
	[0000][ M::kt_pipeline] read 3308576 sequences (400000083 bp)...
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0005] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (left)
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3308576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 1159351, 33, 103)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (47, 80, 120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 266)
[0000][PE] mean and std.dev: (79.92, 48.97)
[0000][PE] low and high boundaries for proper pairs: (1, 339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.87, 75.61)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (205, 269, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2116)
[0000][PE] mean and std.dev: (469.22, 391.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2753)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 80, 128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 278)
[0000][PE] mean and std.dev: (90.53, 53.13)
[0000][PE] low and high boundaries for proper pairs: (1, 353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000144, nseq: 3311492
	[0000][ M::kt_pipeline] read 3311492 sequences (400000144 bp)...
	[0000][ M::mem_process_seqs] Processed 3308576 reads in 676.223 CPU sec, 19.121 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3311492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (105, 1175668, 36, 114)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (46, 76, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 280)
[0000][PE] mean and std.dev: (81.34, 43.48)
[0000][PE] low and high boundaries for proper pairs: (1, 358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.21, 75.36)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 456, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2428)
[0000][PE] mean and std.dev: (377.03, 306.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 92, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 353)
[0000][PE] mean and std.dev: (101.85, 69.45)
[0000][PE] low and high boundaries for proper pairs: (1, 453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3311492 reads in 567.873 CPU sec, 15.898 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000238, nseq: 3300466
	[0000][ M::kt_pipeline] read 3300466 sequences (400000238 bp)...
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3300466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (95, 1141813, 54, 109)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (52, 82, 142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 322)
[0000][PE] mean and std.dev: (89.75, 57.16)
[0000][PE] low and high boundaries for proper pairs: (1, 412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.26, 75.51)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (191, 308, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1067)
[0000][PE] mean and std.dev: (299.24, 164.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1359)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (68, 107, 160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 344)
[0000][PE] mean and std.dev: (111.42, 69.28)
[0000][PE] low and high boundaries for proper pairs: (1, 436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000063, nseq: 3318034
	[0000][ M::kt_pipeline] read 3318034 sequences (400000063 bp)...
	[0000][ M::mem_process_seqs] Processed 3300466 reads in 666.789 CPU sec, 18.585 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000107, nseq: 3305746
	[0000][ M::kt_pipeline] read 3305746 sequences (400000107 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3318034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (113, 1166099, 28, 101)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (51, 85, 173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 417)
[0000][PE] mean and std.dev: (111.64, 82.59)
[0000][PE] low and high boundaries for proper pairs: (1, 539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 138, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.62, 75.10)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (133, 338, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1258)
[0000][PE] mean and std.dev: (317.04, 272.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1633)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (72, 117, 181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 399)
[0000][PE] mean and std.dev: (115.93, 66.00)
[0000][PE] low and high boundaries for proper pairs: (1, 508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3318034 reads in 594.318 CPU sec, 16.761 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (116, 1159985, 21, 114)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (55, 91, 138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 304)
[0000][PE] mean and std.dev: (93.08, 54.73)
[0000][PE] low and high boundaries for proper pairs: (1, 387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.15, 75.65)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (93, 414, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (549.85, 544.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3093)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (57, 87, 135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 291)
[0000][PE] mean and std.dev: (89.88, 53.49)
[0000][PE] low and high boundaries for proper pairs: (1, 369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3305746 reads in 585.968 CPU sec, 16.482 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000110, nseq: 3305636
	[0000][ M::kt_pipeline] read 3305636 sequences (400000110 bp)...
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 1160687, 35, 104)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (58, 95, 151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (103.05, 55.35)
[0000][PE] low and high boundaries for proper pairs: (1, 430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 138, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.70, 75.65)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (234, 314, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (485.88, 464.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2818)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (67, 99, 155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 331)
[0000][PE] mean and std.dev: (105.10, 56.72)
[0000][PE] low and high boundaries for proper pairs: (1, 419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000217, nseq: 3315114
	[0000][ M::kt_pipeline] read 3315114 sequences (400000217 bp)...
	[0000][ M::mem_process_seqs] Processed 3305636 reads in 652.489 CPU sec, 18.282 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3315114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 1169987, 32, 116)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (53, 85, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 353)
[0000][PE] mean and std.dev: (103.71, 75.67)
[0000][PE] low and high boundaries for proper pairs: (1, 453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.88, 75.67)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (222, 460, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2112)
[0000][PE] mean and std.dev: (502.60, 456.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2742)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 92, 149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 341)
[0000][PE] mean and std.dev: (97.90, 64.52)
[0000][PE] low and high boundaries for proper pairs: (1, 437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3315114 reads in 603.318 CPU sec, 16.820 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000002, nseq: 3305020
	[0000][ M::kt_pipeline] read 3305020 sequences (400000002 bp)...
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (109, 1136001, 37, 102)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (55, 99, 158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 364)
[0000][PE] mean and std.dev: (109.86, 66.98)
[0000][PE] low and high boundaries for proper pairs: (1, 467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.91, 75.56)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (95, 380, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1721)
[0000][PE] mean and std.dev: (406.09, 347.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2263)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (67, 119, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 325)
[0000][PE] mean and std.dev: (108.28, 60.21)
[0000][PE] low and high boundaries for proper pairs: (1, 411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000119, nseq: 3320198
	[0000][ M::kt_pipeline] read 3320198 sequences (400000119 bp)...
	[0000][ M::mem_process_seqs] Processed 3305020 reads in 678.410 CPU sec, 19.080 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3320198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 1191563, 29, 106)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (67, 94, 168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 370)
[0000][PE] mean and std.dev: (106.59, 65.87)
[0000][PE] low and high boundaries for proper pairs: (1, 471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 138, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.49, 75.46)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (125, 308, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1241)
[0000][PE] mean and std.dev: (342.75, 287.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1613)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (56, 90, 132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 284)
[0000][PE] mean and std.dev: (92.34, 55.82)
[0000][PE] low and high boundaries for proper pairs: (1, 360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000173, nseq: 3305524
	[0000][ M::kt_pipeline] read 3305524 sequences (400000173 bp)...
	[0000][ M::mem_process_seqs] Processed 3320198 reads in 535.944 CPU sec, 14.639 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 1152452, 35, 117)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (45, 83, 155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 375)
[0000][PE] mean and std.dev: (103.00, 79.64)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.14, 75.65)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 217, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1910)
[0000][PE] mean and std.dev: (219.52, 243.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2525)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (80, 116, 174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 362)
[0000][PE] mean and std.dev: (122.54, 64.52)
[0000][PE] low and high boundaries for proper pairs: (1, 456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3305524 reads in 580.790 CPU sec, 15.988 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000024, nseq: 3308618
	[0000][ M::kt_pipeline] read 3308618 sequences (400000024 bp)...
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3308618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (111, 1151564, 27, 88)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (59, 93, 198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 476)
[0000][PE] mean and std.dev: (114.39, 84.16)
[0000][PE] low and high boundaries for proper pairs: (1, 615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.62, 75.35)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (157, 218, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1861)
[0000][PE] mean and std.dev: (353.80, 342.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2429)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (51, 84, 152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 354)
[0000][PE] mean and std.dev: (99.42, 64.74)
[0000][PE] low and high boundaries for proper pairs: (1, 455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000183, nseq: 3312252
	[0000][ M::kt_pipeline] read 3312252 sequences (400000183 bp)...
	[0000][ M::mem_process_seqs] Processed 3308618 reads in 618.322 CPU sec, 16.997 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3312252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 1170984, 27, 93)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (51, 75, 121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 261)
[0000][PE] mean and std.dev: (80.51, 42.14)
[0000][PE] low and high boundaries for proper pairs: (1, 331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.72, 75.40)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (153, 317, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1434)
[0000][PE] mean and std.dev: (392.93, 297.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1861)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (57, 117, 181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 429)
[0000][PE] mean and std.dev: (119.08, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3312252 reads in 563.922 CPU sec, 15.793 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000121, nseq: 3306534
	[0000][ M::kt_pipeline] read 3306534 sequences (400000121 bp)...
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3306534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (110, 1167361, 30, 95)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (57, 93, 133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 285)
[0000][PE] mean and std.dev: (94.99, 49.68)
[0000][PE] low and high boundaries for proper pairs: (1, 361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.02, 75.65)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (111, 321, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1413)
[0000][PE] mean and std.dev: (351.50, 326.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1847)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (61, 89, 155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 343)
[0000][PE] mean and std.dev: (105.76, 65.91)
[0000][PE] low and high boundaries for proper pairs: (1, 437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3306534 reads in 593.367 CPU sec, 22.991 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000001, nseq: 3305344
	[0000][ M::kt_pipeline] read 3305344 sequences (400000001 bp)...
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (118, 1154844, 42, 118)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (46, 82, 131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 301)
[0000][PE] mean and std.dev: (90.59, 55.87)
[0000][PE] low and high boundaries for proper pairs: (1, 386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.86, 75.70)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (78, 282, 518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1398)
[0000][PE] mean and std.dev: (313.26, 289.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1838)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (60, 106, 158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 354)
[0000][PE] mean and std.dev: (108.28, 69.59)
[0000][PE] low and high boundaries for proper pairs: (1, 452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000200, nseq: 3310330
	[0000][ M::kt_pipeline] read 3310330 sequences (400000200 bp)...
	[0000][ M::mem_process_seqs] Processed 3305344 reads in 641.602 CPU sec, 17.803 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3310330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 1174412, 32, 93)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (51, 97, 161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 381)
[0000][PE] mean and std.dev: (110.28, 73.77)
[0000][PE] low and high boundaries for proper pairs: (1, 491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.61, 75.42)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (77, 210, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 980)
[0000][PE] mean and std.dev: (213.13, 166.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1281)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (57, 101, 179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 423)
[0000][PE] mean and std.dev: (117.13, 79.73)
[0000][PE] low and high boundaries for proper pairs: (1, 545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3310330 reads in 633.874 CPU sec, 17.710 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000252, nseq: 3313266
	[0000][ M::kt_pipeline] read 3313266 sequences (400000252 bp)...
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3313266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 1174951, 25, 98)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (72, 100, 166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 354)
[0000][PE] mean and std.dev: (112.39, 67.55)
[0000][PE] low and high boundaries for proper pairs: (1, 448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.04, 75.63)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (64, 360, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1990)
[0000][PE] mean and std.dev: (373.86, 420.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2632)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (57, 85, 123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 255)
[0000][PE] mean and std.dev: (92.65, 54.52)
[0000][PE] low and high boundaries for proper pairs: (1, 321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3313266 reads in 561.749 CPU sec, 15.338 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000090, nseq: 3302518
	[0000][ M::kt_pipeline] read 3302518 sequences (400000090 bp)...
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3302518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (110, 1158402, 28, 101)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (51, 86, 132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 294)
[0000][PE] mean and std.dev: (97.81, 64.28)
[0000][PE] low and high boundaries for proper pairs: (1, 375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.22, 75.70)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (127, 275, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1402)
[0000][PE] mean and std.dev: (313.96, 318.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1827)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 92, 141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 317)
[0000][PE] mean and std.dev: (95.37, 53.41)
[0000][PE] low and high boundaries for proper pairs: (1, 405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3302518 reads in 585.512 CPU sec, 16.402 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000167, nseq: 3314330
	[0000][ M::kt_pipeline] read 3314330 sequences (400000167 bp)...
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3314330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 1188871, 28, 87)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (55, 83, 154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 352)
[0000][PE] mean and std.dev: (98.60, 67.76)
[0000][PE] low and high boundaries for proper pairs: (1, 451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.90, 75.55)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (225, 413, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (538.04, 506.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (51, 90, 143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 327)
[0000][PE] mean and std.dev: (96.63, 60.76)
[0000][PE] low and high boundaries for proper pairs: (1, 419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3314330 reads in 552.814 CPU sec, 15.209 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000030, nseq: 3310988
	[0000][ M::kt_pipeline] read 3310988 sequences (400000030 bp)...
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3310988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 1163434, 43, 112)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (60, 101, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 339)
[0000][PE] mean and std.dev: (109.34, 66.88)
[0000][PE] low and high boundaries for proper pairs: (1, 432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.82, 75.59)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (112, 229, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1372)
[0000][PE] mean and std.dev: (310.29, 299.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1792)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (55, 89, 170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 400)
[0000][PE] mean and std.dev: (98.16, 69.52)
[0000][PE] low and high boundaries for proper pairs: (1, 515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000206, nseq: 3254772
	[0000][ M::kt_pipeline] read 3254772 sequences (400000206 bp)...
	[0000][ M::mem_process_seqs] Processed 3310988 reads in 590.015 CPU sec, 16.493 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3254772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 1026926, 37, 72)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (48, 91, 145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 339)
[0000][PE] mean and std.dev: (94.20, 63.64)
[0000][PE] low and high boundaries for proper pairs: (1, 436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.80, 75.62)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (126, 273, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (285.71, 218.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1470)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 97, 139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 311)
[0000][PE] mean and std.dev: (92.72, 55.69)
[0000][PE] low and high boundaries for proper pairs: (1, 397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000058, nseq: 3295242
	[0000][ M::kt_pipeline] read 3295242 sequences (400000058 bp)...
	[0000][ M::mem_process_seqs] Processed 3254772 reads in 985.227 CPU sec, 26.601 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3295242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 1138907, 36, 102)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (43, 98, 154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 376)
[0000][PE] mean and std.dev: (97.56, 63.77)
[0000][PE] low and high boundaries for proper pairs: (1, 487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.18, 75.60)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (99, 206, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1488)
[0000][PE] mean and std.dev: (309.60, 280.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1951)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 102, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 353)
[0000][PE] mean and std.dev: (104.03, 65.95)
[0000][PE] low and high boundaries for proper pairs: (1, 453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3295242 reads in 620.586 CPU sec, 17.562 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000283, nseq: 3309076
	[0000][ M::kt_pipeline] read 3309076 sequences (400000283 bp)...
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3309076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 1167940, 36, 105)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (51, 92, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 357)
[0000][PE] mean and std.dev: (95.78, 64.61)
[0000][PE] low and high boundaries for proper pairs: (1, 459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.83, 75.71)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (148, 272, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1498)
[0000][PE] mean and std.dev: (366.65, 327.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1948)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (72, 110, 181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 399)
[0000][PE] mean and std.dev: (120.49, 68.26)
[0000][PE] low and high boundaries for proper pairs: (1, 508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000137, nseq: 3318668
	[0000][ M::kt_pipeline] read 3318668 sequences (400000137 bp)...
	[0000][ M::mem_process_seqs] Processed 3309076 reads in 587.358 CPU sec, 16.339 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3318668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 1162496, 30, 104)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (53, 86, 138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 308)
[0000][PE] mean and std.dev: (93.10, 58.91)
[0000][PE] low and high boundaries for proper pairs: (1, 393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.93, 75.58)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (160, 393, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1378)
[0000][PE] mean and std.dev: (332.85, 226.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1784)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (66, 104, 166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 366)
[0000][PE] mean and std.dev: (121.72, 73.78)
[0000][PE] low and high boundaries for proper pairs: (1, 466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3318668 reads in 557.656 CPU sec, 15.324 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000059, nseq: 3316120
	[0000][ M::kt_pipeline] read 3316120 sequences (400000059 bp)...
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3316120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 1181706, 37, 107)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (52, 95, 144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 328)
[0000][PE] mean and std.dev: (99.95, 62.17)
[0000][PE] low and high boundaries for proper pairs: (1, 420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 138, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.52, 75.29)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (111, 251, 460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1158)
[0000][PE] mean and std.dev: (263.91, 216.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1507)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (55, 91, 148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 334)
[0000][PE] mean and std.dev: (103.57, 63.18)
[0000][PE] low and high boundaries for proper pairs: (1, 427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000124, nseq: 3307994
	[0000][ M::kt_pipeline] read 3307994 sequences (400000124 bp)...
	[0000][ M::mem_process_seqs] Processed 3316120 reads in 545.775 CPU sec, 14.558 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3307994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 1177902, 43, 122)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 103, 151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 327)
[0000][PE] mean and std.dev: (112.05, 66.06)
[0000][PE] low and high boundaries for proper pairs: (1, 415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.06, 75.31)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (140, 233, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1736)
[0000][PE] mean and std.dev: (300.00, 255.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2268)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 107, 157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 365)
[0000][PE] mean and std.dev: (98.67, 60.31)
[0000][PE] low and high boundaries for proper pairs: (1, 469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3307994 reads in 542.713 CPU sec, 14.989 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000146, nseq: 3313970
	[0000][ M::kt_pipeline] read 3313970 sequences (400000146 bp)...
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3313970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 1161866, 44, 97)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (48, 80, 129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 291)
[0000][PE] mean and std.dev: (87.09, 48.05)
[0000][PE] low and high boundaries for proper pairs: (1, 372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.99, 75.65)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (110, 187, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1358)
[0000][PE] mean and std.dev: (299.78, 297.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1774)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 93, 166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 392)
[0000][PE] mean and std.dev: (107.00, 72.96)
[0000][PE] low and high boundaries for proper pairs: (1, 505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000022, nseq: 3318240
	[0000][ M::kt_pipeline] read 3318240 sequences (400000022 bp)...
	[0000][ M::mem_process_seqs] Processed 3313970 reads in 576.516 CPU sec, 15.991 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3318240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 1180573, 26, 90)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (48, 93, 138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 318)
[0000][PE] mean and std.dev: (93.66, 55.49)
[0000][PE] low and high boundaries for proper pairs: (1, 408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 138, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.46, 75.36)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (145, 368, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2125)
[0000][PE] mean and std.dev: (467.28, 468.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (52, 94, 154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 358)
[0000][PE] mean and std.dev: (102.90, 72.38)
[0000][PE] low and high boundaries for proper pairs: (1, 460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3318240 reads in 543.726 CPU sec, 15.274 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000072, nseq: 3308374
	[0000][ M::kt_pipeline] read 3308374 sequences (400000072 bp)...
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3308374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (115, 1134407, 21, 106)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (53, 94, 191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 467)
[0000][PE] mean and std.dev: (118.82, 95.20)
[0000][PE] low and high boundaries for proper pairs: (1, 605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.89, 75.63)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (108, 288, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1257)
[0000][PE] mean and std.dev: (280.79, 186.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1640)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (60, 96, 149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 327)
[0000][PE] mean and std.dev: (98.72, 58.32)
[0000][PE] low and high boundaries for proper pairs: (1, 416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000125, nseq: 3316944
	[0000][ M::kt_pipeline] read 3316944 sequences (400000125 bp)...
	[0000][ M::mem_process_seqs] Processed 3308374 reads in 599.985 CPU sec, 15.949 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3316944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (122, 1185823, 32, 94)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (55, 95, 139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 307)
[0000][PE] mean and std.dev: (96.88, 58.80)
[0000][PE] low and high boundaries for proper pairs: (1, 391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.82, 75.66)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (158, 385, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (519.66, 546.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (52, 86, 143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 325)
[0000][PE] mean and std.dev: (93.52, 62.01)
[0000][PE] low and high boundaries for proper pairs: (1, 416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3316944 reads in 539.706 CPU sec, 14.956 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000026, nseq: 3307134
	[0000][ M::kt_pipeline] read 3307134 sequences (400000026 bp)...
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3307134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 1158849, 37, 116)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 88, 136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 300)
[0000][PE] mean and std.dev: (90.72, 56.81)
[0000][PE] low and high boundaries for proper pairs: (1, 382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.31, 75.69)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (293, 428, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (575.45, 634.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 91, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 353)
[0000][PE] mean and std.dev: (102.32, 65.77)
[0000][PE] low and high boundaries for proper pairs: (1, 453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000043, nseq: 3311864
	[0000][ M::kt_pipeline] read 3311864 sequences (400000043 bp)...
	[0000][ M::mem_process_seqs] Processed 3307134 reads in 556.808 CPU sec, 14.941 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3311864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (110, 1176685, 36, 112)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (62, 94, 140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 296)
[0000][PE] mean and std.dev: (102.39, 62.06)
[0000][PE] low and high boundaries for proper pairs: (1, 374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.73, 75.64)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (183, 335, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1638)
[0000][PE] mean and std.dev: (387.53, 303.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2123)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (62, 133, 168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (113.27, 70.17)
[0000][PE] low and high boundaries for proper pairs: (1, 486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3311864 reads in 572.784 CPU sec, 15.690 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000273, nseq: 3304612
	[0000][ M::kt_pipeline] read 3304612 sequences (400000273 bp)...
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3304612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (113, 1147130, 36, 103)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (65, 96, 154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 332)
[0000][PE] mean and std.dev: (97.29, 55.26)
[0000][PE] low and high boundaries for proper pairs: (1, 421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.93, 75.64)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (284, 494, 747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1673)
[0000][PE] mean and std.dev: (475.79, 295.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2136)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (59, 87, 131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 275)
[0000][PE] mean and std.dev: (90.89, 46.90)
[0000][PE] low and high boundaries for proper pairs: (1, 347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3304612 reads in 582.694 CPU sec, 21.793 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000040, nseq: 3307488
	[0000][ M::kt_pipeline] read 3307488 sequences (400000040 bp)...
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3307488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 1165076, 35, 112)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (55, 111, 191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 463)
[0000][PE] mean and std.dev: (126.03, 84.95)
[0000][PE] low and high boundaries for proper pairs: (1, 599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.38, 75.77)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (239, 428, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1550)
[0000][PE] mean and std.dev: (457.15, 299.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1987)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (60, 92, 154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 342)
[0000][PE] mean and std.dev: (104.08, 69.10)
[0000][PE] low and high boundaries for proper pairs: (1, 436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000059, nseq: 3309492
	[0000][ M::kt_pipeline] read 3309492 sequences (400000059 bp)...
	[0000][ M::mem_process_seqs] Processed 3307488 reads in 547.708 CPU sec, 14.946 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3309492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 1158506, 41, 96)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 86, 158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 366)
[0000][PE] mean and std.dev: (106.31, 73.43)
[0000][PE] low and high boundaries for proper pairs: (1, 470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.30, 75.51)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (171, 328, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1392)
[0000][PE] mean and std.dev: (332.25, 233.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1799)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (73, 112, 167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 355)
[0000][PE] mean and std.dev: (115.35, 59.74)
[0000][PE] low and high boundaries for proper pairs: (1, 449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3309492 reads in 577.234 CPU sec, 15.780 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000184, nseq: 3305982
	[0000][ M::kt_pipeline] read 3305982 sequences (400000184 bp)...
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 1162483, 42, 96)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (51, 81, 123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 267)
[0000][PE] mean and std.dev: (85.61, 53.19)
[0000][PE] low and high boundaries for proper pairs: (1, 339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.89, 75.66)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (127, 336, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (871.27, 1142.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (62, 106, 200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 476)
[0000][PE] mean and std.dev: (118.44, 89.30)
[0000][PE] low and high boundaries for proper pairs: (1, 614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3305982 reads in 582.691 CPU sec, 16.006 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000043, nseq: 3285412
	[0000][ M::kt_pipeline] read 3285412 sequences (400000043 bp)...
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3285412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (97, 1103052, 32, 90)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (56, 84, 137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 299)
[0000][PE] mean and std.dev: (94.79, 60.50)
[0000][PE] low and high boundaries for proper pairs: (1, 380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.14, 75.64)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (114, 341, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1185)
[0000][PE] mean and std.dev: (305.23, 241.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1542)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (63, 108, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 363)
[0000][PE] mean and std.dev: (108.10, 61.53)
[0000][PE] low and high boundaries for proper pairs: (1, 463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000255, nseq: 3301858
	[0000][ M::kt_pipeline] read 3301858 sequences (400000255 bp)...
	[0000][ M::mem_process_seqs] Processed 3285412 reads in 659.405 CPU sec, 18.173 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3301858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 1158868, 29, 105)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (60, 90, 140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 300)
[0000][PE] mean and std.dev: (99.17, 59.75)
[0000][PE] low and high boundaries for proper pairs: (1, 380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.38, 75.76)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (187, 382, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (642.37, 627.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3883)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (69, 105, 211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 495)
[0000][PE] mean and std.dev: (131.15, 97.18)
[0000][PE] low and high boundaries for proper pairs: (1, 637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3301858 reads in 569.321 CPU sec, 15.854 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000282, nseq: 3308552
	[0000][ M::kt_pipeline] read 3308552 sequences (400000282 bp)...
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3308552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (128, 1177501, 34, 112)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (49, 87, 157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 373)
[0000][PE] mean and std.dev: (101.65, 71.57)
[0000][PE] low and high boundaries for proper pairs: (1, 481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.23, 75.75)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (114, 165, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 948)
[0000][PE] mean and std.dev: (190.59, 162.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (63, 105, 165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 369)
[0000][PE] mean and std.dev: (106.24, 60.91)
[0000][PE] low and high boundaries for proper pairs: (1, 471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000011, nseq: 3304500
	[0000][ M::kt_pipeline] read 3304500 sequences (400000011 bp)...
	[0000][ M::mem_process_seqs] Processed 3308552 reads in 552.822 CPU sec, 15.395 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0007] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0008] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0007] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0008] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3304500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 1153721, 18, 99)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (55, 98, 144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 322)
[0000][PE] mean and std.dev: (100.53, 62.27)
[0000][PE] low and high boundaries for proper pairs: (1, 411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.06, 75.62)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (165, 419, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2103)
[0000][PE] mean and std.dev: (479.56, 426.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2749)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (54, 88, 159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 369)
[0000][PE] mean and std.dev: (97.14, 68.40)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000212, nseq: 3304442
	[0000][ M::kt_pipeline] read 3304442 sequences (400000212 bp)...
	[0000][ M::mem_process_seqs] Processed 3304500 reads in 585.712 CPU sec, 18.037 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3304442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (95, 1162807, 37, 122)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (60, 104, 166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 378)
[0000][PE] mean and std.dev: (105.81, 74.29)
[0000][PE] low and high boundaries for proper pairs: (1, 484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.27, 75.64)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (127, 218, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (290.34, 272.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3247)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (58, 103, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 343)
[0000][PE] mean and std.dev: (106.73, 72.93)
[0000][PE] low and high boundaries for proper pairs: (1, 438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3304442 reads in 574.959 CPU sec, 16.123 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000059, nseq: 3311150
	[0000][ M::kt_pipeline] read 3311150 sequences (400000059 bp)...
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3311150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (105, 1180411, 35, 91)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (52, 91, 156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 364)
[0000][PE] mean and std.dev: (102.01, 68.93)
[0000][PE] low and high boundaries for proper pairs: (1, 468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.12, 75.68)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (298, 499, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (763.14, 667.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5930)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (66, 122, 175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 393)
[0000][PE] mean and std.dev: (120.93, 72.11)
[0000][PE] low and high boundaries for proper pairs: (1, 502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000036, nseq: 3306122
	[0000][ M::kt_pipeline] read 3306122 sequences (400000036 bp)...
	[0000][ M::mem_process_seqs] Processed 3311150 reads in 595.957 CPU sec, 16.962 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3306122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 1167753, 42, 121)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 80, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 264)
[0000][PE] mean and std.dev: (84.56, 50.48)
[0000][PE] low and high boundaries for proper pairs: (1, 334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.03, 75.67)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (79, 312, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1954)
[0000][PE] mean and std.dev: (430.65, 462.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2579)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (57, 97, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 345)
[0000][PE] mean and std.dev: (104.71, 67.95)
[0000][PE] low and high boundaries for proper pairs: (1, 441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3306122 reads in 585.891 CPU sec, 16.186 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000203, nseq: 3313334
	[0000][ M::kt_pipeline] read 3313334 sequences (400000203 bp)...
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3313334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 1166562, 33, 101)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (46, 80, 155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 373)
[0000][PE] mean and std.dev: (91.95, 66.55)
[0000][PE] low and high boundaries for proper pairs: (1, 482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.98, 75.61)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (84, 208, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1362)
[0000][PE] mean and std.dev: (265.14, 297.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1788)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (56, 87, 137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 299)
[0000][PE] mean and std.dev: (94.81, 55.17)
[0000][PE] low and high boundaries for proper pairs: (1, 380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3313334 reads in 552.896 CPU sec, 15.377 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000069, nseq: 3271518
	[0000][ M::kt_pipeline] read 3271518 sequences (400000069 bp)...
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3271518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 1069479, 26, 94)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (50, 83, 155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 365)
[0000][PE] mean and std.dev: (101.60, 76.85)
[0000][PE] low and high boundaries for proper pairs: (1, 470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.10, 75.79)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (91, 162, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1102)
[0000][PE] mean and std.dev: (231.65, 217.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1439)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (68, 93, 166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 362)
[0000][PE] mean and std.dev: (101.01, 54.18)
[0000][PE] low and high boundaries for proper pairs: (1, 460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000123, nseq: 3309072
	[0000][ M::kt_pipeline] read 3309072 sequences (400000123 bp)...
	[0000][ M::mem_process_seqs] Processed 3271518 reads in 744.176 CPU sec, 19.847 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3309072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 1171948, 30, 101)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (56, 88, 142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 314)
[0000][PE] mean and std.dev: (85.00, 42.33)
[0000][PE] low and high boundaries for proper pairs: (1, 400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.05, 75.58)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (91, 159, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 898)
[0000][PE] mean and std.dev: (218.67, 197.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1167)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (51, 93, 144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 330)
[0000][PE] mean and std.dev: (97.38, 61.47)
[0000][PE] low and high boundaries for proper pairs: (1, 423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3309072 reads in 586.027 CPU sec, 16.466 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000021, nseq: 3311210
	[0000][ M::kt_pipeline] read 3311210 sequences (400000021 bp)...
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3311210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (111, 1179153, 26, 84)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (60, 103, 167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 381)
[0000][PE] mean and std.dev: (109.88, 68.72)
[0000][PE] low and high boundaries for proper pairs: (1, 488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.05, 75.61)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (104, 254, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (336.00, 346.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2420)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (54, 83, 127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 273)
[0000][PE] mean and std.dev: (88.68, 48.72)
[0000][PE] low and high boundaries for proper pairs: (1, 346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3311210 reads in 533.016 CPU sec, 14.459 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000104, nseq: 3301464
	[0000][ M::kt_pipeline] read 3301464 sequences (400000104 bp)...
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3301464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 1128717, 36, 117)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (71, 105, 197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 449)
[0000][PE] mean and std.dev: (119.65, 86.73)
[0000][PE] low and high boundaries for proper pairs: (1, 575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.44, 75.41)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 139, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1507)
[0000][PE] mean and std.dev: (209.71, 246.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2001)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (60, 104, 191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 453)
[0000][PE] mean and std.dev: (122.81, 86.00)
[0000][PE] low and high boundaries for proper pairs: (1, 584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000018, nseq: 3299340
	[0000][ M::kt_pipeline] read 3299340 sequences (400000018 bp)...
	[0000][ M::mem_process_seqs] Processed 3301464 reads in 634.885 CPU sec, 16.943 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3299340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (127, 1130383, 32, 109)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (55, 80, 129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 277)
[0000][PE] mean and std.dev: (88.52, 52.79)
[0000][PE] low and high boundaries for proper pairs: (1, 351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.06, 75.68)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (177, 432, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1323)
[0000][PE] mean and std.dev: (392.69, 299.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1705)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (66, 106, 165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 363)
[0000][PE] mean and std.dev: (111.51, 63.89)
[0000][PE] low and high boundaries for proper pairs: (1, 462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3299340 reads in 649.708 CPU sec, 18.034 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000164, nseq: 3287020
	[0000][ M::kt_pipeline] read 3287020 sequences (400000164 bp)...
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3287020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 1112087, 47, 99)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (66, 106, 164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 360)
[0000][PE] mean and std.dev: (120.27, 74.55)
[0000][PE] low and high boundaries for proper pairs: (1, 458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.88, 75.65)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (247, 415, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2530)
[0000][PE] mean and std.dev: (585.02, 493.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (59, 85, 138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 296)
[0000][PE] mean and std.dev: (89.40, 53.01)
[0000][PE] low and high boundaries for proper pairs: (1, 375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000224, nseq: 3220590
	[0000][ M::kt_pipeline] read 3220590 sequences (400000224 bp)...
	[0000][ M::mem_process_seqs] Processed 3287020 reads in 685.521 CPU sec, 18.907 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3220590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 959191, 34, 94)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (60, 87, 159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 357)
[0000][PE] mean and std.dev: (97.54, 61.61)
[0000][PE] low and high boundaries for proper pairs: (1, 456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.90, 75.57)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (90, 253, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (596.93, 862.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (58, 91, 152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 340)
[0000][PE] mean and std.dev: (102.25, 67.08)
[0000][PE] low and high boundaries for proper pairs: (1, 434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000113, nseq: 3311962
	[0000][ M::kt_pipeline] read 3311962 sequences (400000113 bp)...
	[0000][ M::mem_process_seqs] Processed 3220590 reads in 1174.915 CPU sec, 31.299 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3311962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 1177122, 44, 92)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (45, 80, 135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 315)
[0000][PE] mean and std.dev: (90.54, 58.18)
[0000][PE] low and high boundaries for proper pairs: (1, 405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.96, 75.71)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (79, 213, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1501)
[0000][PE] mean and std.dev: (258.54, 282.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1975)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (66, 90, 149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 315)
[0000][PE] mean and std.dev: (98.19, 58.52)
[0000][PE] low and high boundaries for proper pairs: (1, 398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3311962 reads in 569.581 CPU sec, 23.058 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000108, nseq: 3315364
	[0000][ M::kt_pipeline] read 3315364 sequences (400000108 bp)...
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3315364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (134, 1186426, 43, 85)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 98, 158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 348)
[0000][PE] mean and std.dev: (107.24, 70.13)
[0000][PE] low and high boundaries for proper pairs: (1, 443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.07, 75.77)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (89, 358, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2072)
[0000][PE] mean and std.dev: (312.46, 263.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2733)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (65, 95, 162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 356)
[0000][PE] mean and std.dev: (113.46, 74.70)
[0000][PE] low and high boundaries for proper pairs: (1, 453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000223, nseq: 3311538
	[0000][ M::kt_pipeline] read 3311538 sequences (400000223 bp)...
	[0000][ M::mem_process_seqs] Processed 3315364 reads in 539.638 CPU sec, 14.745 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3311538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (97, 1157742, 29, 92)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (51, 87, 152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 354)
[0000][PE] mean and std.dev: (97.10, 65.93)
[0000][PE] low and high boundaries for proper pairs: (1, 455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.91, 75.66)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (105, 254, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (314.04, 309.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3025)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (61, 88, 140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 298)
[0000][PE] mean and std.dev: (101.88, 65.78)
[0000][PE] low and high boundaries for proper pairs: (1, 377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3311538 reads in 564.277 CPU sec, 15.552 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000247, nseq: 3303988
	[0000][ M::kt_pipeline] read 3303988 sequences (400000247 bp)...
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3303988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (112, 1162766, 31, 101)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 110, 174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (121.93, 84.73)
[0000][PE] low and high boundaries for proper pairs: (1, 507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.82, 75.79)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (141, 288, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (475.61, 602.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (51, 89, 143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 327)
[0000][PE] mean and std.dev: (90.49, 55.90)
[0000][PE] low and high boundaries for proper pairs: (1, 419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000245, nseq: 3309812
	[0000][ M::kt_pipeline] read 3309812 sequences (400000245 bp)...
	[0000][ M::mem_process_seqs] Processed 3303988 reads in 561.893 CPU sec, 15.241 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3309812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 1159950, 32, 108)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 95, 138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 306)
[0000][PE] mean and std.dev: (98.61, 62.02)
[0000][PE] low and high boundaries for proper pairs: (1, 390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.01, 75.69)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (172, 365, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1762)
[0000][PE] mean and std.dev: (404.67, 332.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2292)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (62, 104, 152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 332)
[0000][PE] mean and std.dev: (103.40, 64.85)
[0000][PE] low and high boundaries for proper pairs: (1, 422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000203, nseq: 3303876
	[0000][ M::kt_pipeline] read 3303876 sequences (400000203 bp)...
	[0000][ M::mem_process_seqs] Processed 3309812 reads in 594.132 CPU sec, 16.361 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3303876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 1130489, 45, 114)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (53, 93, 136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 302)
[0000][PE] mean and std.dev: (98.69, 63.35)
[0000][PE] low and high boundaries for proper pairs: (1, 385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 140, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 394)
[0000][PE] mean and std.dev: (152.68, 74.90)
[0000][PE] low and high boundaries for proper pairs: (1, 493)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (120, 245, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1011)
[0000][PE] mean and std.dev: (272.98, 209.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1308)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (71, 108, 164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 350)
[0000][PE] mean and std.dev: (107.97, 63.62)
[0000][PE] low and high boundaries for proper pairs: (1, 443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3303876 reads in 581.444 CPU sec, 16.180 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000105, nseq: 3316352
	[0000][ M::kt_pipeline] read 3316352 sequences (400000105 bp)...
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3316352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (116, 1156122, 31, 84)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (64, 95, 134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 274)
[0000][PE] mean and std.dev: (88.25, 44.50)
[0000][PE] low and high boundaries for proper pairs: (1, 344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.01, 75.67)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (103, 272, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1492)
[0000][PE] mean and std.dev: (346.37, 283.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1955)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (60, 92, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 339)
[0000][PE] mean and std.dev: (100.75, 61.26)
[0000][PE] low and high boundaries for proper pairs: (1, 432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3316352 reads in 561.413 CPU sec, 15.450 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000189, nseq: 3303840
	[0000][ M::kt_pipeline] read 3303840 sequences (400000189 bp)...
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3303840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (108, 1135768, 41, 102)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (57, 94, 160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 366)
[0000][PE] mean and std.dev: (106.46, 71.41)
[0000][PE] low and high boundaries for proper pairs: (1, 469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.06, 75.41)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (148, 348, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2092)
[0000][PE] mean and std.dev: (431.18, 381.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2740)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (57, 91, 128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 270)
[0000][PE] mean and std.dev: (93.22, 50.83)
[0000][PE] low and high boundaries for proper pairs: (1, 341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3303840 reads in 630.110 CPU sec, 17.095 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000075, nseq: 3315288
	[0000][ M::kt_pipeline] read 3315288 sequences (400000075 bp)...
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3315288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (123, 1179229, 24, 112)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (58, 91, 141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 307)
[0000][PE] mean and std.dev: (92.18, 54.29)
[0000][PE] low and high boundaries for proper pairs: (1, 390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.91, 75.62)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (183, 342, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (285.05, 166.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1387)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (56, 101, 162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 374)
[0000][PE] mean and std.dev: (102.23, 68.61)
[0000][PE] low and high boundaries for proper pairs: (1, 480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3315288 reads in 547.141 CPU sec, 15.066 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000011, nseq: 3314684
	[0000][ M::kt_pipeline] read 3314684 sequences (400000011 bp)...
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3314684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (114, 1187234, 37, 106)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 101, 156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 342)
[0000][PE] mean and std.dev: (103.70, 62.16)
[0000][PE] low and high boundaries for proper pairs: (1, 435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.79, 75.71)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (180, 474, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (614.53, 575.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3876)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (66, 104, 174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 390)
[0000][PE] mean and std.dev: (113.22, 72.71)
[0000][PE] low and high boundaries for proper pairs: (1, 498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000028, nseq: 3313170
	[0000][ M::kt_pipeline] read 3313170 sequences (400000028 bp)...
	[0000][ M::mem_process_seqs] Processed 3314684 reads in 541.300 CPU sec, 14.588 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3313170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (114, 1193377, 38, 112)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 93, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 381)
[0000][PE] mean and std.dev: (109.84, 78.23)
[0000][PE] low and high boundaries for proper pairs: (1, 490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.90, 75.78)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (88, 195, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1231)
[0000][PE] mean and std.dev: (263.24, 245.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1612)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 92, 146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 332)
[0000][PE] mean and std.dev: (98.94, 62.69)
[0000][PE] low and high boundaries for proper pairs: (1, 425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3313170 reads in 539.523 CPU sec, 15.150 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000010, nseq: 3293484
	[0000][ M::kt_pipeline] read 3293484 sequences (400000010 bp)...
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3293484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (116, 1139930, 36, 96)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (59, 89, 139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 299)
[0000][PE] mean and std.dev: (96.62, 53.57)
[0000][PE] low and high boundaries for proper pairs: (1, 379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.01, 75.75)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (129, 284, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1368)
[0000][PE] mean and std.dev: (279.56, 233.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1781)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (66, 104, 143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 297)
[0000][PE] mean and std.dev: (104.20, 59.12)
[0000][PE] low and high boundaries for proper pairs: (1, 374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000055, nseq: 3320564
	[0000][ M::kt_pipeline] read 3320564 sequences (400000055 bp)...
	[0000][ M::mem_process_seqs] Processed 3293484 reads in 632.250 CPU sec, 17.318 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3320564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 1197439, 30, 118)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (52, 87, 134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 298)
[0000][PE] mean and std.dev: (93.66, 55.57)
[0000][PE] low and high boundaries for proper pairs: (1, 380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.80, 75.66)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (115, 665, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (608.30, 535.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (64, 94, 151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 325)
[0000][PE] mean and std.dev: (105.11, 60.29)
[0000][PE] low and high boundaries for proper pairs: (1, 412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000015, nseq: 3313142
	[0000][ M::mem_process_seqs] Processed 3320564 reads in 541.640 CPU sec, 14.766 real sec
	[0000][ M::kt_pipeline] read 3313142 sequences (400000015 bp)...
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3313142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (128, 1164582, 30, 119)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 97, 167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 375)
[0000][PE] mean and std.dev: (113.48, 74.33)
[0000][PE] low and high boundaries for proper pairs: (1, 479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.16, 75.45)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (85, 455, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1870)
[0000][PE] mean and std.dev: (370.64, 293.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2465)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (49, 91, 149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 349)
[0000][PE] mean and std.dev: (96.15, 59.67)
[0000][PE] low and high boundaries for proper pairs: (1, 449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3313142 reads in 565.728 CPU sec, 15.437 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000012, nseq: 3298038
	[0000][ M::kt_pipeline] read 3298038 sequences (400000012 bp)...
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3298038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 1138004, 35, 108)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (64, 100, 159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 349)
[0000][PE] mean and std.dev: (110.03, 66.49)
[0000][PE] low and high boundaries for proper pairs: (1, 444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.42, 75.57)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 306, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2043)
[0000][PE] mean and std.dev: (409.45, 438.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2668)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (69, 121, 221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 525)
[0000][PE] mean and std.dev: (135.19, 97.94)
[0000][PE] low and high boundaries for proper pairs: (1, 677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000184, nseq: 3306078
	[0000][ M::kt_pipeline] read 3306078 sequences (400000184 bp)...
	[0000][ M::mem_process_seqs] Processed 3298038 reads in 569.614 CPU sec, 15.554 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3306078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 1151157, 28, 98)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (49, 85, 130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 292)
[0000][PE] mean and std.dev: (92.29, 56.36)
[0000][PE] low and high boundaries for proper pairs: (1, 373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.92, 75.58)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (116, 277, 694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1850)
[0000][PE] mean and std.dev: (411.07, 380.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2428)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (42, 81, 133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 315)
[0000][PE] mean and std.dev: (86.25, 54.31)
[0000][PE] low and high boundaries for proper pairs: (1, 406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3306078 reads in 616.400 CPU sec, 16.925 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000074, nseq: 3310832
	[0000][ M::kt_pipeline] read 3310832 sequences (400000074 bp)...
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3310832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 1176226, 21, 104)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (65, 106, 160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 350)
[0000][PE] mean and std.dev: (107.04, 67.32)
[0000][PE] low and high boundaries for proper pairs: (1, 445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.97, 75.56)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (124, 335, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (596.45, 718.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (71, 112, 167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 359)
[0000][PE] mean and std.dev: (120.34, 74.17)
[0000][PE] low and high boundaries for proper pairs: (1, 455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3310832 reads in 568.961 CPU sec, 15.711 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000195, nseq: 3300390
	[0000][ M::kt_pipeline] read 3300390 sequences (400000195 bp)...
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3300390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 1145907, 56, 94)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (50, 89, 121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 263)
[0000][PE] mean and std.dev: (90.76, 52.40)
[0000][PE] low and high boundaries for proper pairs: (1, 334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.02, 75.70)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (101, 139, 346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 836)
[0000][PE] mean and std.dev: (217.96, 190.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1081)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (66, 94, 159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 345)
[0000][PE] mean and std.dev: (106.51, 68.24)
[0000][PE] low and high boundaries for proper pairs: (1, 438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000269, nseq: 3313144
	[0000][ M::mem_process_seqs] Processed 3300390 reads in 582.581 CPU sec, 15.965 real sec
	[0000][ M::kt_pipeline] read 3313144 sequences (400000269 bp)...
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3313144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 1186547, 31, 101)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (65, 95, 158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 344)
[0000][PE] mean and std.dev: (101.54, 57.76)
[0000][PE] low and high boundaries for proper pairs: (1, 437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.13, 75.68)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (110, 344, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2999)
[0000][PE] mean and std.dev: (539.00, 594.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3962)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (54, 87, 130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 282)
[0000][PE] mean and std.dev: (93.47, 53.85)
[0000][PE] low and high boundaries for proper pairs: (1, 358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3313144 reads in 542.690 CPU sec, 21.269 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000180, nseq: 3286726
	[0000][ M::kt_pipeline] read 3286726 sequences (400000180 bp)...
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000194, nseq: 3305380
	[0000][ M::kt_pipeline] read 3305380 sequences (400000194 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3286726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 1107249, 35, 114)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (41, 80, 119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 275)
[0000][PE] mean and std.dev: (85.02, 54.60)
[0000][PE] low and high boundaries for proper pairs: (1, 353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 138, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.51, 75.40)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (133, 288, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2230)
[0000][PE] mean and std.dev: (370.10, 386.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2929)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (52, 88, 142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 322)
[0000][PE] mean and std.dev: (90.92, 56.71)
[0000][PE] low and high boundaries for proper pairs: (1, 412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3286726 reads in 768.038 CPU sec, 20.730 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (117, 1160762, 34, 121)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (48, 85, 151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 357)
[0000][PE] mean and std.dev: (92.49, 62.71)
[0000][PE] low and high boundaries for proper pairs: (1, 460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.13, 75.58)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (89, 302, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2672)
[0000][PE] mean and std.dev: (540.91, 598.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (62, 96, 151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 329)
[0000][PE] mean and std.dev: (107.22, 63.11)
[0000][PE] low and high boundaries for proper pairs: (1, 418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3305380 reads in 622.232 CPU sec, 17.706 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000192, nseq: 3304630
	[0000][ M::kt_pipeline] read 3304630 sequences (400000192 bp)...
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3304630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (105, 1158310, 52, 91)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (43, 75, 128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 298)
[0000][PE] mean and std.dev: (85.22, 53.71)
[0000][PE] low and high boundaries for proper pairs: (1, 383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.27, 75.43)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (154, 249, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2410)
[0000][PE] mean and std.dev: (433.21, 413.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (54, 91, 149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 339)
[0000][PE] mean and std.dev: (97.52, 64.58)
[0000][PE] low and high boundaries for proper pairs: (1, 434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3304630 reads in 573.655 CPU sec, 15.775 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000112, nseq: 3313128
	[0000][ M::kt_pipeline] read 3313128 sequences (400000112 bp)...
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3313128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (124, 1179946, 34, 101)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (65, 121, 180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 410)
[0000][PE] mean and std.dev: (118.89, 75.99)
[0000][PE] low and high boundaries for proper pairs: (1, 525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.02, 75.67)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (140, 475, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2072)
[0000][PE] mean and std.dev: (492.12, 438.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2716)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (63, 106, 169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 381)
[0000][PE] mean and std.dev: (108.60, 70.45)
[0000][PE] low and high boundaries for proper pairs: (1, 487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3313128 reads in 549.686 CPU sec, 15.041 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000066, nseq: 3299594
	[0000][ M::kt_pipeline] read 3299594 sequences (400000066 bp)...
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3299594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 1120128, 43, 96)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (60, 99, 161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 363)
[0000][PE] mean and std.dev: (111.61, 71.76)
[0000][PE] low and high boundaries for proper pairs: (1, 464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.77, 75.18)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (159, 281, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1551)
[0000][PE] mean and std.dev: (344.67, 249.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2015)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (63, 108, 157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 345)
[0000][PE] mean and std.dev: (105.19, 63.45)
[0000][PE] low and high boundaries for proper pairs: (1, 439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000159, nseq: 3311766
	[0000][ M::kt_pipeline] read 3311766 sequences (400000159 bp)...
	[0000][ M::mem_process_seqs] Processed 3299594 reads in 654.937 CPU sec, 17.548 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3311766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (111, 1176092, 32, 123)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (66, 103, 136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 276)
[0000][PE] mean and std.dev: (96.65, 49.64)
[0000][PE] low and high boundaries for proper pairs: (1, 346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.96, 75.75)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (124, 334, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1669)
[0000][PE] mean and std.dev: (349.79, 296.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2184)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (56, 90, 150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 338)
[0000][PE] mean and std.dev: (101.99, 67.24)
[0000][PE] low and high boundaries for proper pairs: (1, 432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3311766 reads in 582.384 CPU sec, 16.194 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000195, nseq: 3305770
	[0000][ M::kt_pipeline] read 3305770 sequences (400000195 bp)...
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0019] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0015] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (left)
[0019] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0018] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (left)
[0018] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (left)
[0020] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0015] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (left)
[0016] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0020] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0017] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (left)
[0016] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0018] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (left)
[0017] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (left)
[0014] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0014] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (right)
[0017] Re-allocating (doubling) seqBufRefs in mem_chain2aln_across_reads_V2 (left)
[0000] read_chunk: 400000000, work_chunk_size: 400000038, nseq: 3304550
	[0000][ M::kt_pipeline] read 3304550 sequences (400000038 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (95, 1159143, 43, 85)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (61, 105, 152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 334)
[0000][PE] mean and std.dev: (105.07, 59.46)
[0000][PE] low and high boundaries for proper pairs: (1, 425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.05, 75.69)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (237, 378, 698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1620)
[0000][PE] mean and std.dev: (419.38, 317.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2081)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (61, 99, 164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 370)
[0000][PE] mean and std.dev: (105.51, 67.14)
[0000][PE] low and high boundaries for proper pairs: (1, 473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3305770 reads in 594.466 CPU sec, 19.600 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3304550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (109, 1172483, 19, 109)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 95, 141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 297)
[0000][PE] mean and std.dev: (98.27, 54.43)
[0000][PE] low and high boundaries for proper pairs: (1, 375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.15, 75.44)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (190, 275, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1426)
[0000][PE] mean and std.dev: (345.18, 345.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1838)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (57, 93, 143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 315)
[0000][PE] mean and std.dev: (102.19, 65.02)
[0000][PE] low and high boundaries for proper pairs: (1, 401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3304550 reads in 570.361 CPU sec, 15.791 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000287, nseq: 3304064
	[0000][ M::kt_pipeline] read 3304064 sequences (400000287 bp)...
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3304064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 1150722, 31, 93)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (58, 89, 148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 328)
[0000][PE] mean and std.dev: (100.33, 63.33)
[0000][PE] low and high boundaries for proper pairs: (1, 418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.11, 75.67)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (81, 177, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1056)
[0000][PE] mean and std.dev: (220.80, 171.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1381)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 86, 162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (96.87, 62.42)
[0000][PE] low and high boundaries for proper pairs: (1, 489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000054, nseq: 3319008
	[0000][ M::kt_pipeline] read 3319008 sequences (400000054 bp)...
	[0000][ M::mem_process_seqs] Processed 3304064 reads in 570.771 CPU sec, 15.567 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3319008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (130, 1190210, 22, 108)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (65, 105, 160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 350)
[0000][PE] mean and std.dev: (110.81, 69.13)
[0000][PE] low and high boundaries for proper pairs: (1, 445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.61, 75.35)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (155, 255, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1733)
[0000][PE] mean and std.dev: (304.83, 251.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2259)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (78, 110, 170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 354)
[0000][PE] mean and std.dev: (116.41, 65.58)
[0000][PE] low and high boundaries for proper pairs: (1, 446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3319008 reads in 529.055 CPU sec, 14.915 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000165, nseq: 3296598
	[0000][ M::kt_pipeline] read 3296598 sequences (400000165 bp)...
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3296598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 1149352, 26, 102)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 87, 169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 399)
[0000][PE] mean and std.dev: (106.97, 76.31)
[0000][PE] low and high boundaries for proper pairs: (1, 514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.21, 75.48)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (137, 411, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1454)
[0000][PE] mean and std.dev: (303.10, 201.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1893)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (60, 100, 150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 330)
[0000][PE] mean and std.dev: (98.16, 50.02)
[0000][PE] low and high boundaries for proper pairs: (1, 420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000049, nseq: 3319282
	[0000][ M::kt_pipeline] read 3319282 sequences (400000049 bp)...
	[0000][ M::mem_process_seqs] Processed 3296598 reads in 636.762 CPU sec, 17.024 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3319282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 1185311, 34, 107)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 82, 143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 321)
[0000][PE] mean and std.dev: (93.51, 65.14)
[0000][PE] low and high boundaries for proper pairs: (1, 410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.76, 75.73)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (68, 291, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1442)
[0000][PE] mean and std.dev: (367.64, 368.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1900)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (57, 93, 154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 348)
[0000][PE] mean and std.dev: (100.16, 63.12)
[0000][PE] low and high boundaries for proper pairs: (1, 445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3319282 reads in 562.132 CPU sec, 15.660 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000232, nseq: 3295362
	[0000][ M::kt_pipeline] read 3295362 sequences (400000232 bp)...
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3295362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 1120379, 23, 113)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (49, 81, 132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 298)
[0000][PE] mean and std.dev: (91.99, 55.77)
[0000][PE] low and high boundaries for proper pairs: (1, 381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.23, 75.65)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (135, 190, 777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2061)
[0000][PE] mean and std.dev: (301.16, 311.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2703)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (48, 98, 143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 333)
[0000][PE] mean and std.dev: (103.40, 68.41)
[0000][PE] low and high boundaries for proper pairs: (1, 428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000084, nseq: 3302120
	[0000][ M::kt_pipeline] read 3302120 sequences (400000084 bp)...
	[0000][ M::mem_process_seqs] Processed 3295362 reads in 649.699 CPU sec, 17.851 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3302120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 1157623, 87, 109)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (59, 86, 144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 314)
[0000][PE] mean and std.dev: (91.33, 54.60)
[0000][PE] low and high boundaries for proper pairs: (1, 399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.94, 75.70)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (116, 137, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 725)
[0000][PE] mean and std.dev: (179.42, 147.37)
[0000][PE] low and high boundaries for proper pairs: (1, 928)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (67, 96, 160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 346)
[0000][PE] mean and std.dev: (106.69, 57.32)
[0000][PE] low and high boundaries for proper pairs: (1, 439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3302120 reads in 590.748 CPU sec, 16.511 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000137, nseq: 3316662
	[0000][ M::kt_pipeline] read 3316662 sequences (400000137 bp)...
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3316662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 1162935, 52, 108)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 113, 210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 504)
[0000][PE] mean and std.dev: (142.87, 108.49)
[0000][PE] low and high boundaries for proper pairs: (1, 651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.79, 75.73)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 290, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1916)
[0000][PE] mean and std.dev: (350.54, 296.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2519)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (58, 98, 157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 355)
[0000][PE] mean and std.dev: (103.97, 65.36)
[0000][PE] low and high boundaries for proper pairs: (1, 454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000101, nseq: 3308778
	[0000][ M::kt_pipeline] read 3308778 sequences (400000101 bp)...
	[0000][ M::mem_process_seqs] Processed 3316662 reads in 627.713 CPU sec, 17.165 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3308778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (109, 1163228, 32, 116)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (57, 92, 141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 309)
[0000][PE] mean and std.dev: (90.47, 54.87)
[0000][PE] low and high boundaries for proper pairs: (1, 393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.15, 75.55)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (64, 247, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1159)
[0000][PE] mean and std.dev: (248.03, 225.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1524)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (71, 106, 156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 326)
[0000][PE] mean and std.dev: (104.19, 56.28)
[0000][PE] low and high boundaries for proper pairs: (1, 411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3308778 reads in 573.346 CPU sec, 15.863 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000108, nseq: 3311166
	[0000][ M::kt_pipeline] read 3311166 sequences (400000108 bp)...
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3311166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (105, 1175476, 28, 103)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (50, 91, 138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 314)
[0000][PE] mean and std.dev: (96.54, 61.64)
[0000][PE] low and high boundaries for proper pairs: (1, 402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.83, 75.54)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (120, 183, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 912)
[0000][PE] mean and std.dev: (234.35, 192.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1176)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (50, 86, 134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 302)
[0000][PE] mean and std.dev: (95.39, 61.61)
[0000][PE] low and high boundaries for proper pairs: (1, 386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000177, nseq: 3285096
	[0000][ M::kt_pipeline] read 3285096 sequences (400000177 bp)...
	[0000][ M::mem_process_seqs] Processed 3311166 reads in 554.923 CPU sec, 14.968 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3285096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 1103668, 23, 82)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (48, 87, 144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 336)
[0000][PE] mean and std.dev: (90.78, 62.27)
[0000][PE] low and high boundaries for proper pairs: (1, 432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.08, 75.29)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 355, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (313.62, 214.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1536)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (50, 90, 141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (101.22, 59.99)
[0000][PE] low and high boundaries for proper pairs: (1, 414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3285096 reads in 656.027 CPU sec, 17.867 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000252, nseq: 3313790
	[0000][ M::kt_pipeline] read 3313790 sequences (400000252 bp)...
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3313790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 1180690, 29, 112)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (45, 80, 128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 294)
[0000][PE] mean and std.dev: (88.01, 58.89)
[0000][PE] low and high boundaries for proper pairs: (1, 377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.92, 75.77)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 447, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4091)
[0000][PE] mean and std.dev: (624.73, 748.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5382)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (56, 100, 141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 311)
[0000][PE] mean and std.dev: (101.03, 62.62)
[0000][PE] low and high boundaries for proper pairs: (1, 396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3313790 reads in 567.597 CPU sec, 22.384 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000156, nseq: 3316440
	[0000][ M::kt_pipeline] read 3316440 sequences (400000156 bp)...
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3316440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 1184213, 41, 103)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (59, 82, 127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 263)
[0000][PE] mean and std.dev: (93.78, 54.54)
[0000][PE] low and high boundaries for proper pairs: (1, 331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 138, 195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (151.42, 75.44)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (154, 275, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (350.57, 290.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1513)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (62, 95, 149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (104.66, 62.52)
[0000][PE] low and high boundaries for proper pairs: (1, 410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000061, nseq: 3309152
	[0000][ M::kt_pipeline] read 3309152 sequences (400000061 bp)...
	[0000][ M::mem_process_seqs] Processed 3316440 reads in 562.548 CPU sec, 15.460 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3309152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 1178070, 29, 109)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (59, 99, 180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 422)
[0000][PE] mean and std.dev: (110.57, 79.25)
[0000][PE] low and high boundaries for proper pairs: (1, 543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.12, 75.49)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (30, 152, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1923)
[0000][PE] mean and std.dev: (287.78, 327.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2554)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (50, 85, 139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 317)
[0000][PE] mean and std.dev: (90.30, 58.86)
[0000][PE] low and high boundaries for proper pairs: (1, 406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3309152 reads in 577.131 CPU sec, 15.867 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000117, nseq: 3312066
	[0000][ M::kt_pipeline] read 3312066 sequences (400000117 bp)...
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3312066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 1146433, 36, 76)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (49, 75, 156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 370)
[0000][PE] mean and std.dev: (91.16, 63.35)
[0000][PE] low and high boundaries for proper pairs: (1, 477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.09, 75.63)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (64, 300, 574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1594)
[0000][PE] mean and std.dev: (287.94, 247.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2104)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 92, 164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 386)
[0000][PE] mean and std.dev: (103.90, 64.00)
[0000][PE] low and high boundaries for proper pairs: (1, 497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000117, nseq: 3304978
	[0000][ M::kt_pipeline] read 3304978 sequences (400000117 bp)...
	[0000][ M::mem_process_seqs] Processed 3312066 reads in 594.734 CPU sec, 16.210 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3304978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 1149726, 31, 91)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (57, 106, 226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 564)
[0000][PE] mean and std.dev: (110.89, 79.92)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.02, 75.66)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (111, 297, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2196)
[0000][PE] mean and std.dev: (442.17, 469.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2891)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (52, 100, 184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 448)
[0000][PE] mean and std.dev: (110.25, 93.77)
[0000][PE] low and high boundaries for proper pairs: (1, 580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3304978 reads in 597.644 CPU sec, 16.553 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000117, nseq: 3316568
	[0000][ M::kt_pipeline] read 3316568 sequences (400000117 bp)...
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3316568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 1187801, 29, 86)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (47, 98, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 365)
[0000][PE] mean and std.dev: (97.52, 69.14)
[0000][PE] low and high boundaries for proper pairs: (1, 471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 138, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.77, 75.73)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 319, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3861)
[0000][PE] mean and std.dev: (626.15, 642.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (56, 114, 175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 413)
[0000][PE] mean and std.dev: (120.59, 79.58)
[0000][PE] low and high boundaries for proper pairs: (1, 532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000104, nseq: 3306958
	[0000][ M::mem_process_seqs] Processed 3316568 reads in 545.098 CPU sec, 15.207 real sec
	[0000][ M::kt_pipeline] read 3306958 sequences (400000104 bp)...
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3306958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (112, 1165788, 15, 105)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 77, 140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 312)
[0000][PE] mean and std.dev: (99.80, 65.17)
[0000][PE] low and high boundaries for proper pairs: (1, 398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.11, 75.70)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (91, 144, 222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 484)
[0000][PE] mean and std.dev: (130.46, 100.13)
[0000][PE] low and high boundaries for proper pairs: (1, 615)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (59, 101, 152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 338)
[0000][PE] mean and std.dev: (99.15, 56.17)
[0000][PE] low and high boundaries for proper pairs: (1, 431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3306958 reads in 559.981 CPU sec, 15.135 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000137, nseq: 3303812
	[0000][ M::kt_pipeline] read 3303812 sequences (400000137 bp)...
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3303812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 1134120, 31, 87)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (64, 92, 146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 310)
[0000][PE] mean and std.dev: (98.52, 55.59)
[0000][PE] low and high boundaries for proper pairs: (1, 392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.16, 75.25)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (192, 286, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1809)
[0000][PE] mean and std.dev: (431.24, 412.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2348)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (55, 78, 136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 298)
[0000][PE] mean and std.dev: (86.81, 50.96)
[0000][PE] low and high boundaries for proper pairs: (1, 379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000129, nseq: 3298624
	[0000][ M::kt_pipeline] read 3298624 sequences (400000129 bp)...
	[0000][ M::mem_process_seqs] Processed 3303812 reads in 594.763 CPU sec, 16.253 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3298624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (113, 1152441, 44, 86)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (58, 86, 138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 298)
[0000][PE] mean and std.dev: (99.21, 57.62)
[0000][PE] low and high boundaries for proper pairs: (1, 378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.90, 75.58)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (138, 169, 226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 402)
[0000][PE] mean and std.dev: (165.03, 62.71)
[0000][PE] low and high boundaries for proper pairs: (1, 490)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (58, 96, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 343)
[0000][PE] mean and std.dev: (101.44, 65.55)
[0000][PE] low and high boundaries for proper pairs: (1, 438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000139, nseq: 3305822
	[0000][ M::kt_pipeline] read 3305822 sequences (400000139 bp)...
	[0000][ M::mem_process_seqs] Processed 3298624 reads in 648.037 CPU sec, 18.071 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3305822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 1162259, 28, 128)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (58, 83, 161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 367)
[0000][PE] mean and std.dev: (110.46, 78.04)
[0000][PE] low and high boundaries for proper pairs: (1, 470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.19, 75.77)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (122, 268, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1262)
[0000][PE] mean and std.dev: (279.50, 259.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1642)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (51, 113, 153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 357)
[0000][PE] mean and std.dev: (109.35, 70.21)
[0000][PE] low and high boundaries for proper pairs: (1, 459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3305822 reads in 599.246 CPU sec, 16.530 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000153, nseq: 3304182
	[0000][ M::kt_pipeline] read 3304182 sequences (400000153 bp)...
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3304182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 1159946, 46, 105)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (49, 101, 156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 370)
[0000][PE] mean and std.dev: (107.32, 76.72)
[0000][PE] low and high boundaries for proper pairs: (1, 477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (151.93, 75.68)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (313, 531, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2398)
[0000][PE] mean and std.dev: (554.73, 355.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3093)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (50, 99, 168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 404)
[0000][PE] mean and std.dev: (109.65, 73.23)
[0000][PE] low and high boundaries for proper pairs: (1, 522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000288, nseq: 3307550
	[0000][ M::kt_pipeline] read 3307550 sequences (400000288 bp)...
	[0000][ M::mem_process_seqs] Processed 3304182 reads in 626.621 CPU sec, 16.937 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3307550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 1160470, 35, 105)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 102, 173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 393)
[0000][PE] mean and std.dev: (116.12, 72.66)
[0000][PE] low and high boundaries for proper pairs: (1, 503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.26, 75.65)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (68, 253, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1253)
[0000][PE] mean and std.dev: (245.13, 226.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1648)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (55, 98, 136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 298)
[0000][PE] mean and std.dev: (97.99, 57.06)
[0000][PE] low and high boundaries for proper pairs: (1, 379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3307550 reads in 573.713 CPU sec, 16.889 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000280, nseq: 3304452
	[0000][ M::kt_pipeline] read 3304452 sequences (400000280 bp)...
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 3304452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (135, 1163459, 27, 105)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (72, 116, 205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 471)
[0000][PE] mean and std.dev: (126.38, 78.50)
[0000][PE] low and high boundaries for proper pairs: (1, 604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (96, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (152.36, 75.41)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (195, 317, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 996)
[0000][PE] mean and std.dev: (272.61, 185.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1263)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (61, 89, 167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 379)
[0000][PE] mean and std.dev: (113.04, 76.46)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 308406094, nseq: 2546000
	[0000][ M::kt_pipeline] read 2546000 sequences (308406094 bp)...
	[0000][ M::mem_process_seqs] Processed 3304452 reads in 583.512 CPU sec, 15.930 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 1342662642, n: 2546000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (95, 859914, 24, 89)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (59, 84, 127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 263)
[0000][PE] mean and std.dev: (82.45, 41.22)
[0000][PE] low and high boundaries for proper pairs: (1, 331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (95, 139, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (152.31, 75.68)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (98, 285, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1505)
[0000][PE] mean and std.dev: (359.04, 328.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1974)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (65, 101, 148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 314)
[0000][PE] mean and std.dev: (101.04, 52.97)
[0000][PE] low and high boundaries for proper pairs: (1, 397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2546000 reads in 498.188 CPU sec, 13.785 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.681594 MHz
Runtime profile:

	Time taken for main_mem function: 1989.76 sec

	IO times (sec) :
	Reading IO time (reads) avg: 1350.07, (1350.07, 1350.07)
	Writing IO time (SAM) avg: 511.26, (511.26, 511.26)
	Reading IO time (Reference Genome) avg: 2.32, (2.32, 2.32)
	Index read time avg: 0.31, (0.31, 0.31)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 1987.13
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 1814.10, (1814.10, 1814.10)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 481.69, (481.69, 481.69)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 1290.22, (1290.22, 1290.22)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 554.46, (555.88, 553.28)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 657.07, (659.59, 654.09)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
